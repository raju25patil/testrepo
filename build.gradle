buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "net.saliman:gradle-cobertura-plugin:2.5.0"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5"
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: "war"
apply plugin: "net.saliman.cobertura"
apply plugin: "org.sonarqube"

repositories {
    mavenCentral()
}

sourceCompatibility = javacompatibility
targetCompatibility = javacompatibility

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web-services')
    compile('org.springframework.boot:spring-boot-starter-amqp')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('io.springfox:springfox-swagger2:2.4.0')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.apache.commons:commons-lang3:3.7')
    compile('io.springfox:springfox-swagger-ui:2.8.0')
    compile('io.springfox:springfox-swagger2:2.8.0')

    runtime('com.h2database:h2')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.mockito:mockito-core:2.18.0')

}

sonarqube {
 properties {
 property "sonar.host.url", "http://localhost:9000"
 property "sonar.cobertura.reportPath" ,"/build/reports/cobertura/coverage.xml"
 property "sonar.junit.reportsPath","build/reports/tests"
 property "sonar.groovy.cobertura.reportPath","/build/reports/cobertura/coverage.xml"
 property "sonar.java.coveragePlugin","cobertura"
 }
}

cobertura {
    coverageFormats = ['xml','html']
}

test.finalizedBy(project.tasks.cobertura)
project.tasks["sonarqube"].dependsOn test
